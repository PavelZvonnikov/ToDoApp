{"remainingRequest":"/home/pavel/git/ToDoApp/node_modules/babel-loader/lib/index.js!/home/pavel/git/ToDoApp/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/pavel/git/ToDoApp/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/pavel/git/ToDoApp/src/components/ToDoList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/pavel/git/ToDoApp/src/components/ToDoList.vue","mtime":1572864041799},{"path":"/home/pavel/git/ToDoApp/node_modules/cache-loader/dist/cjs.js","mtime":1570461812501},{"path":"/home/pavel/git/ToDoApp/node_modules/babel-loader/lib/index.js","mtime":1570461814081},{"path":"/home/pavel/git/ToDoApp/node_modules/cache-loader/dist/cjs.js","mtime":1570461812501},{"path":"/home/pavel/git/ToDoApp/node_modules/vue-loader/lib/index.js","mtime":1570461812249}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport TodoItem from \"./TodoItem/temp.vue\";\nexport default {\n  name: 'todo-list',\n  components: {\n    TodoItem: TodoItem\n  },\n  data: function data() {\n    return {\n      newTodo: '',\n      idTodo: 3,\n      beforeEditCache: '',\n      filter: 'all',\n      todos: [{\n        id: 1,\n        'title': 'Make Todo App',\n        'completed': false,\n        'editing': false\n      }, {\n        'id': 2,\n        'title': 'Create one more app',\n        'completed': false,\n        'editing': false\n      }]\n    };\n  },\n  computed: {\n    remaining: function remaining() {\n      return this.todos.filter(function (todo) {\n        return !todo.completed;\n      }).length;\n    },\n    anyRemaining: function anyRemaining() {\n      return this.remaining != 0;\n    },\n    todosFiltered: function todosFiltered() {\n      if (this.filter == 'all') {\n        return this.todos;\n      } else if (this.filter == 'active') {\n        return this.todos.filter(function (todo) {\n          return !todo.completed;\n        });\n      } else if (this.filter == 'completed') {\n        return this.todos.filter(function (todo) {\n          return todo.completed;\n        });\n      }\n\n      return this.todos;\n    },\n    showClearCompletedButton: function showClearCompletedButton() {\n      return this.todos.filter(function (todo) {\n        return todo.completed;\n      }).length > 0;\n    }\n  },\n  directives: {\n    focus: {\n      inserted: function inserted(el) {\n        el.focus();\n      }\n    }\n  },\n  methods: {\n    addTodo: function addTodo() {\n      if (this.newTodo.trim().length == 0) {\n        return;\n      }\n\n      this.todos.push({\n        id: this.idTodo,\n        title: this.newTodo,\n        completed: false,\n        editing: false\n      });\n      this.newTodo = '';\n      this.idTodo++;\n    },\n    remove: function remove(index) {\n      this.todos.splice(index, 1);\n    },\n    checkAllTodos: function checkAllTodos() {\n      this.todos.forEach(function (todo) {\n        return todo.completed = event.target.checked;\n      });\n    },\n    clearCompleted: function clearCompleted() {\n      this.todos = this.todos.filter(function (todo) {\n        return !todo.completed;\n      });\n    },\n    finishedEdit: function finishedEdit(data) {\n      this.todos.splice(data.index, 1, data.todo);\n    }\n  }\n};",{"version":3,"sources":["ToDoList.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <input type=\"text\" class=\"todo-input\" placeholder=\"What needs to be done\"\n    v-model=\"newTodo\" @keyup.enter=\"addTodo\">\n    <transition-group name=\"fade\" enter-active-class=\"animated fadeInUp\"\n    leave-active-class=\"animated fadeOutDown\">\n    <TodoItem v-for=\"(todo, index) in todosFiltered\" :key=\"todo.id\"\n    :todo=\"todo\" :index=\"index\" :checkAll=\"!anyRemaining\" \n    @removedTodo=\"remove\" @finishedEdit=\"finishedEdit\" />\n    </transition-group>\n    <div class=\"extra-container\">\n      <div><label><input type=\"checkbox\" :checked=\"!anyRemaining\"\n      @change=\"checkAllTodos\"> Check All </label></div>\n        <div> {{ remaining }} items left </div>\n    </div>\n    <div class=\"extra-container\">\n      <div>\n        <button :class=\"{ active: filter == 'all'}\"\n        @click=\"filter = 'all'\">All</button>\n        <button :class=\"{ active: filter == 'active'}\"\n        @click=\"filter = 'active'\">Active</button>\n        <button :class=\"{ active: filter == 'completed'}\"\n        @click=\"filter = 'completed'\">Completed</button>\n      </div>\n      <div>\n        <transition name=\"fade\">\n        <button v-if=\"showClearCompletedButton\" \n        @click=\"clearCompleted\">Clear completed</button>\n        </transition>\n      </div>\n    </div>  \n  </div>\n</template>\n\n<script>\n  import TodoItem from './TodoItem/temp.vue';\n\n\nexport default {\n  name: 'todo-list',\n  components: {\n    TodoItem,\n  },\n  data () {\n    return {\n      newTodo: '',\n      idTodo: 3,\n      beforeEditCache: '',\n      filter: 'all',\n      todos: [\n        {\n          id: 1,\n          'title': 'Make Todo App',\n          'completed': false,\n          'editing': false,\n        },\n        {\n          'id': 2,\n          'title': 'Create one more app',\n          'completed': false,\n          'editing': false,\n        },\n      ],\n\n    }\n  },\n  computed: {\n    remaining() {\n      return this.todos.filter( todo => !todo.completed).length\n    },\n    anyRemaining() {\n      return this.remaining != 0\n    },\n    todosFiltered() {\n      if (this.filter == 'all') {\n        return this.todos;\n      } else if (this.filter == 'active') {\n        return this.todos.filter(todo => !todo.completed)\n      } else if (this.filter == 'completed') {\n        return this.todos.filter(todo => todo.completed)\n      }\n      return this.todos\n    },\n    showClearCompletedButton() {\n      return this.todos.filter(todo => todo.completed).length > 0\n    }\n  },\n  directives: {\n    focus: {\n      inserted: function (el) {\n        el.focus()\n      }\n    }\n  },\n  methods: {\n    addTodo() {\n      if (this.newTodo.trim().length == 0) {\n        return\n      }\n      this.todos.push({\n        id: this.idTodo,\n        title: this.newTodo,\n        completed: false,\n        editing: false,\n      })\n\n      this.newTodo = ''\n      this.idTodo++\n    },\n    remove(index) {\n      this.todos.splice(index, 1)\n    },\n    checkAllTodos() {\n      this.todos.forEach((todo) => todo.completed = event.target.checked\n      )\n    },\n    clearCompleted() {\n      this.todos = this.todos.filter(todo => !todo.completed)\n    },\n    finishedEdit(data) {\n      this.todos.splice(data.index, 1, data.todo)\n    }\n  }\n}\n\n</script>\n\n<style lang=\"scss\">\n\n  @import url(\"https://cdnjs.cloudflare.com/ajax/libs/animate.css/3.5.2/animate.min.css\");\n\n  .todo-input {\n    width: 100%;\n    padding: 10px 18px;\n    font-size: 18px;\n    margin-bottom: 16px;\n\n    &:focus {\n      outline: 0;\n    }\n  }  \n\n  .completed {\n    text-decoration: line-through;\n    color: grey;\n  }\n\n  .extra-container {\n    display: flex;\n    align-items :center;\n    justify-content: space-between;\n    font-size: 16px;\n    border-top: 1px solid lightgrey;\n    padding-top: 14px;\n    margin-bottom: 14px; \n  }\n\n  button {\n    font-size: 14px;\n    background-color: white;\n    appearance: none;\n    padding: 5px;\n    margin-right: 5px;\n    border: none;\n    font: inherit;\n    color: inherit;\n    background-color: transparent;\n\n    &:hover {\n      background-color: rgb(182, 185, 185);\n      color: white;\n      border-radius: 4px;\n    }\n\n    &:focus {\n      outline: none;\n    }\n  }\n\n  .active {\n      background-color: rgb(205, 209, 209);\n      color: white;\n      border-radius: 4px; \n  }\n  \n.fade-enter-active, .fade-leave-active {\n  transition: opacity 0.2s;\n}\n\n.fade-enter, .fade-leave-to {\n  opacity: 0;\n} \n</style>\n"],"sourceRoot":"src/components"}]}