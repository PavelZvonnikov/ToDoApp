{"remainingRequest":"/home/pavel/git/ToDoApp/node_modules/babel-loader/lib/index.js!/home/pavel/git/ToDoApp/node_modules/eslint-loader/index.js??ref--13-0!/home/pavel/git/ToDoApp/src/components/TodoList/index.js","dependencies":[{"path":"/home/pavel/git/ToDoApp/src/components/TodoList/index.js","mtime":1572864553022},{"path":"/home/pavel/git/ToDoApp/node_modules/cache-loader/dist/cjs.js","mtime":1570461812501},{"path":"/home/pavel/git/ToDoApp/node_modules/babel-loader/lib/index.js","mtime":1570461814081},{"path":"/home/pavel/git/ToDoApp/node_modules/eslint-loader/index.js","mtime":1570461812109}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport TodoItem from \"./TodoItem/temp.vue\";\nexport default {\n  name: 'todo-list',\n  components: {\n    TodoItem: TodoItem\n  },\n  data: function data() {\n    return {\n      newTodo: '',\n      idTodo: 3,\n      beforeEditCache: '',\n      filter: 'all',\n      todos: [{\n        id: 1,\n        'title': 'Make Todo App',\n        'completed': false,\n        'editing': false\n      }, {\n        'id': 2,\n        'title': 'Create one more app',\n        'completed': false,\n        'editing': false\n      }]\n    };\n  },\n  computed: {\n    remaining: function remaining() {\n      return this.todos.filter(function (todo) {\n        return !todo.completed;\n      }).length;\n    },\n    anyRemaining: function anyRemaining() {\n      return this.remaining != 0;\n    },\n    todosFiltered: function todosFiltered() {\n      if (this.filter == 'all') {\n        return this.todos;\n      } else if (this.filter == 'active') {\n        return this.todos.filter(function (todo) {\n          return !todo.completed;\n        });\n      } else if (this.filter == 'completed') {\n        return this.todos.filter(function (todo) {\n          return todo.completed;\n        });\n      }\n\n      return this.todos;\n    },\n    showClearCompletedButton: function showClearCompletedButton() {\n      return this.todos.filter(function (todo) {\n        return todo.completed;\n      }).length > 0;\n    }\n  },\n  directives: {\n    focus: {\n      inserted: function inserted(el) {\n        el.focus();\n      }\n    }\n  },\n  methods: {\n    addTodo: function addTodo() {\n      if (this.newTodo.trim().length == 0) {\n        return;\n      }\n\n      this.todos.push({\n        id: this.idTodo,\n        title: this.newTodo,\n        completed: false,\n        editing: false\n      });\n      this.newTodo = '';\n      this.idTodo++;\n    },\n    remove: function remove(index) {\n      this.todos.splice(index, 1);\n    },\n    checkAllTodos: function checkAllTodos() {\n      this.todos.forEach(function (todo) {\n        return todo.completed = event.target.checked;\n      });\n    },\n    clearCompleted: function clearCompleted() {\n      this.todos = this.todos.filter(function (todo) {\n        return !todo.completed;\n      });\n    },\n    finishedEdit: function finishedEdit(data) {\n      this.todos.splice(data.index, 1, data.todo);\n    }\n  }\n};",{"version":3,"sources":["/home/pavel/git/ToDoApp/src/components/TodoList/index.js"],"names":["TodoItem","name","components","data","newTodo","idTodo","beforeEditCache","filter","todos","id","computed","remaining","todo","completed","length","anyRemaining","todosFiltered","showClearCompletedButton","directives","focus","inserted","el","methods","addTodo","trim","push","title","editing","remove","index","splice","checkAllTodos","forEach","event","target","checked","clearCompleted","finishedEdit"],"mappings":"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","sourcesContent":["import TodoItem from './TodoItem/temp.vue';\n\nexport default {\n  name: 'todo-list',\n  components: {\n    TodoItem,\n  },\n  data () {\n    return {\n      newTodo: '',\n      idTodo: 3,\n      beforeEditCache: '',\n      filter: 'all',\n      todos: [\n        {\n          id: 1,\n          'title': 'Make Todo App',\n          'completed': false,\n          'editing': false,\n        },\n        {\n          'id': 2,\n          'title': 'Create one more app',\n          'completed': false,\n          'editing': false,\n        },\n      ],\n\n    }\n  },\n  computed: {\n    remaining() {\n      return this.todos.filter( todo => !todo.completed).length\n    },\n    anyRemaining() {\n      return this.remaining != 0\n    },\n    todosFiltered() {\n      if (this.filter == 'all') {\n        return this.todos;\n      } else if (this.filter == 'active') {\n        return this.todos.filter(todo => !todo.completed)\n      } else if (this.filter == 'completed') {\n        return this.todos.filter(todo => todo.completed)\n      }\n      return this.todos\n    },\n    showClearCompletedButton() {\n      return this.todos.filter(todo => todo.completed).length > 0\n    }\n  },\n  directives: {\n    focus: {\n      inserted: function (el) {\n        el.focus()\n      }\n    }\n  },\n  methods: {\n    addTodo() {\n      if (this.newTodo.trim().length == 0) {\n        return\n      }\n      this.todos.push({\n        id: this.idTodo,\n        title: this.newTodo,\n        completed: false,\n        editing: false,\n      })\n\n      this.newTodo = ''\n      this.idTodo++\n    },\n    remove(index) {\n      this.todos.splice(index, 1)\n    },\n    checkAllTodos() {\n      this.todos.forEach((todo) => todo.completed = event.target.checked\n      )\n    },\n    clearCompleted() {\n      this.todos = this.todos.filter(todo => !todo.completed)\n    },\n    finishedEdit(data) {\n      this.todos.splice(data.index, 1, data.todo)\n    }\n  }\n}"]}]}