{"remainingRequest":"/home/pavel/git/ToDoApp/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/pavel/git/ToDoApp/src/components/ToDoList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/pavel/git/ToDoApp/src/components/ToDoList.vue","mtime":1572864041799},{"path":"/home/pavel/git/ToDoApp/node_modules/cache-loader/dist/cjs.js","mtime":1570461812501},{"path":"/home/pavel/git/ToDoApp/node_modules/babel-loader/lib/index.js","mtime":1570461814081},{"path":"/home/pavel/git/ToDoApp/node_modules/cache-loader/dist/cjs.js","mtime":1570461812501},{"path":"/home/pavel/git/ToDoApp/node_modules/vue-loader/lib/index.js","mtime":1570461812249}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n  import TodoItem from './TodoItem/temp.vue';\n\n\nexport default {\n  name: 'todo-list',\n  components: {\n    TodoItem,\n  },\n  data () {\n    return {\n      newTodo: '',\n      idTodo: 3,\n      beforeEditCache: '',\n      filter: 'all',\n      todos: [\n        {\n          id: 1,\n          'title': 'Make Todo App',\n          'completed': false,\n          'editing': false,\n        },\n        {\n          'id': 2,\n          'title': 'Create one more app',\n          'completed': false,\n          'editing': false,\n        },\n      ],\n\n    }\n  },\n  computed: {\n    remaining() {\n      return this.todos.filter( todo => !todo.completed).length\n    },\n    anyRemaining() {\n      return this.remaining != 0\n    },\n    todosFiltered() {\n      if (this.filter == 'all') {\n        return this.todos;\n      } else if (this.filter == 'active') {\n        return this.todos.filter(todo => !todo.completed)\n      } else if (this.filter == 'completed') {\n        return this.todos.filter(todo => todo.completed)\n      }\n      return this.todos\n    },\n    showClearCompletedButton() {\n      return this.todos.filter(todo => todo.completed).length > 0\n    }\n  },\n  directives: {\n    focus: {\n      inserted: function (el) {\n        el.focus()\n      }\n    }\n  },\n  methods: {\n    addTodo() {\n      if (this.newTodo.trim().length == 0) {\n        return\n      }\n      this.todos.push({\n        id: this.idTodo,\n        title: this.newTodo,\n        completed: false,\n        editing: false,\n      })\n\n      this.newTodo = ''\n      this.idTodo++\n    },\n    remove(index) {\n      this.todos.splice(index, 1)\n    },\n    checkAllTodos() {\n      this.todos.forEach((todo) => todo.completed = event.target.checked\n      )\n    },\n    clearCompleted() {\n      this.todos = this.todos.filter(todo => !todo.completed)\n    },\n    finishedEdit(data) {\n      this.todos.splice(data.index, 1, data.todo)\n    }\n  }\n}\n\n",{"version":3,"sources":["ToDoList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ToDoList.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <input type=\"text\" class=\"todo-input\" placeholder=\"What needs to be done\"\n    v-model=\"newTodo\" @keyup.enter=\"addTodo\">\n    <transition-group name=\"fade\" enter-active-class=\"animated fadeInUp\"\n    leave-active-class=\"animated fadeOutDown\">\n    <TodoItem v-for=\"(todo, index) in todosFiltered\" :key=\"todo.id\"\n    :todo=\"todo\" :index=\"index\" :checkAll=\"!anyRemaining\" \n    @removedTodo=\"remove\" @finishedEdit=\"finishedEdit\" />\n    </transition-group>\n    <div class=\"extra-container\">\n      <div><label><input type=\"checkbox\" :checked=\"!anyRemaining\"\n      @change=\"checkAllTodos\"> Check All </label></div>\n        <div> {{ remaining }} items left </div>\n    </div>\n    <div class=\"extra-container\">\n      <div>\n        <button :class=\"{ active: filter == 'all'}\"\n        @click=\"filter = 'all'\">All</button>\n        <button :class=\"{ active: filter == 'active'}\"\n        @click=\"filter = 'active'\">Active</button>\n        <button :class=\"{ active: filter == 'completed'}\"\n        @click=\"filter = 'completed'\">Completed</button>\n      </div>\n      <div>\n        <transition name=\"fade\">\n        <button v-if=\"showClearCompletedButton\" \n        @click=\"clearCompleted\">Clear completed</button>\n        </transition>\n      </div>\n    </div>  \n  </div>\n</template>\n\n<script>\n  import TodoItem from './TodoItem/temp.vue';\n\n\nexport default {\n  name: 'todo-list',\n  components: {\n    TodoItem,\n  },\n  data () {\n    return {\n      newTodo: '',\n      idTodo: 3,\n      beforeEditCache: '',\n      filter: 'all',\n      todos: [\n        {\n          id: 1,\n          'title': 'Make Todo App',\n          'completed': false,\n          'editing': false,\n        },\n        {\n          'id': 2,\n          'title': 'Create one more app',\n          'completed': false,\n          'editing': false,\n        },\n      ],\n\n    }\n  },\n  computed: {\n    remaining() {\n      return this.todos.filter( todo => !todo.completed).length\n    },\n    anyRemaining() {\n      return this.remaining != 0\n    },\n    todosFiltered() {\n      if (this.filter == 'all') {\n        return this.todos;\n      } else if (this.filter == 'active') {\n        return this.todos.filter(todo => !todo.completed)\n      } else if (this.filter == 'completed') {\n        return this.todos.filter(todo => todo.completed)\n      }\n      return this.todos\n    },\n    showClearCompletedButton() {\n      return this.todos.filter(todo => todo.completed).length > 0\n    }\n  },\n  directives: {\n    focus: {\n      inserted: function (el) {\n        el.focus()\n      }\n    }\n  },\n  methods: {\n    addTodo() {\n      if (this.newTodo.trim().length == 0) {\n        return\n      }\n      this.todos.push({\n        id: this.idTodo,\n        title: this.newTodo,\n        completed: false,\n        editing: false,\n      })\n\n      this.newTodo = ''\n      this.idTodo++\n    },\n    remove(index) {\n      this.todos.splice(index, 1)\n    },\n    checkAllTodos() {\n      this.todos.forEach((todo) => todo.completed = event.target.checked\n      )\n    },\n    clearCompleted() {\n      this.todos = this.todos.filter(todo => !todo.completed)\n    },\n    finishedEdit(data) {\n      this.todos.splice(data.index, 1, data.todo)\n    }\n  }\n}\n\n</script>\n\n<style lang=\"scss\">\n\n  @import url(\"https://cdnjs.cloudflare.com/ajax/libs/animate.css/3.5.2/animate.min.css\");\n\n  .todo-input {\n    width: 100%;\n    padding: 10px 18px;\n    font-size: 18px;\n    margin-bottom: 16px;\n\n    &:focus {\n      outline: 0;\n    }\n  }  \n\n  .completed {\n    text-decoration: line-through;\n    color: grey;\n  }\n\n  .extra-container {\n    display: flex;\n    align-items :center;\n    justify-content: space-between;\n    font-size: 16px;\n    border-top: 1px solid lightgrey;\n    padding-top: 14px;\n    margin-bottom: 14px; \n  }\n\n  button {\n    font-size: 14px;\n    background-color: white;\n    appearance: none;\n    padding: 5px;\n    margin-right: 5px;\n    border: none;\n    font: inherit;\n    color: inherit;\n    background-color: transparent;\n\n    &:hover {\n      background-color: rgb(182, 185, 185);\n      color: white;\n      border-radius: 4px;\n    }\n\n    &:focus {\n      outline: none;\n    }\n  }\n\n  .active {\n      background-color: rgb(205, 209, 209);\n      color: white;\n      border-radius: 4px; \n  }\n  \n.fade-enter-active, .fade-leave-active {\n  transition: opacity 0.2s;\n}\n\n.fade-enter, .fade-leave-to {\n  opacity: 0;\n} \n</style>\n"]}]}