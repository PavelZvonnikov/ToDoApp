{"remainingRequest":"/home/pavel/Documents/Vue/ToDo list/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/pavel/Documents/Vue/ToDo list/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/pavel/Documents/Vue/ToDo list/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/pavel/Documents/Vue/ToDo list/src/components/ToDoList.vue?vue&type=template&id=96935758&","dependencies":[{"path":"/home/pavel/Documents/Vue/ToDo list/src/components/ToDoList.vue","mtime":1570452933388},{"path":"/home/pavel/Documents/Vue/ToDo list/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/pavel/Documents/Vue/ToDo list/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/pavel/Documents/Vue/ToDo list/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/pavel/Documents/Vue/ToDo list/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    [\n      _c(\"input\", {\n        directives: [\n          {\n            name: \"model\",\n            rawName: \"v-model\",\n            value: _vm.newTodo,\n            expression: \"newTodo\"\n          }\n        ],\n        staticClass: \"todo-input\",\n        attrs: { type: \"text\", placeholder: \"What needs to be done\" },\n        domProps: { value: _vm.newTodo },\n        on: {\n          keyup: function($event) {\n            if (\n              !$event.type.indexOf(\"key\") &&\n              _vm._k($event.keyCode, \"enter\", 13, $event.key, \"Enter\")\n            ) {\n              return null\n            }\n            return _vm.addTodo($event)\n          },\n          input: function($event) {\n            if ($event.target.composing) {\n              return\n            }\n            _vm.newTodo = $event.target.value\n          }\n        }\n      }),\n      _vm._l(_vm.todos, function(todo, index) {\n        return _c(\"div\", { key: todo.id, staticClass: \"todo-item\" }, [\n          _c(\"div\", { staticClass: \"todo-item-left\" }, [\n            !todo.editing\n              ? _c(\n                  \"div\",\n                  {\n                    staticClass: \"todo-item-label\",\n                    on: {\n                      dblclick: function($event) {\n                        return _vm.editTodo(todo)\n                      }\n                    }\n                  },\n                  [_vm._v(\" \\n        \" + _vm._s(todo.title) + \"\\n      \")]\n                )\n              : _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: todo.title,\n                      expression: \"todo.title\"\n                    },\n                    { name: \"focus\", rawName: \"v-focus\" }\n                  ],\n                  staticClass: \"todo-item-edit\",\n                  attrs: { type: \"text\" },\n                  domProps: { value: todo.title },\n                  on: {\n                    blur: function($event) {\n                      return _vm.doneEdit(todo)\n                    },\n                    keyup: [\n                      function($event) {\n                        if (\n                          !$event.type.indexOf(\"key\") &&\n                          _vm._k(\n                            $event.keyCode,\n                            \"enter\",\n                            13,\n                            $event.key,\n                            \"Enter\"\n                          )\n                        ) {\n                          return null\n                        }\n                        return _vm.doneEdit(todo)\n                      },\n                      function($event) {\n                        if (\n                          !$event.type.indexOf(\"key\") &&\n                          _vm._k($event.keyCode, \"esc\", 27, $event.key, [\n                            \"Esc\",\n                            \"Escape\"\n                          ])\n                        ) {\n                          return null\n                        }\n                        return _vm.cancelEdit(todo)\n                      }\n                    ],\n                    input: function($event) {\n                      if ($event.target.composing) {\n                        return\n                      }\n                      _vm.$set(todo, \"title\", $event.target.value)\n                    }\n                  }\n                })\n          ]),\n          _c(\n            \"div\",\n            {\n              staticClass: \"remove-item\",\n              on: {\n                click: function($event) {\n                  return _vm.remove(index)\n                }\n              }\n            },\n            [_vm._v(\"\\n      Ã—\\n    \")]\n          )\n        ])\n      })\n    ],\n    2\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}